
import React from 'react';
import { useLanguage } from '@/contexts/LanguageContext';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ExternalLink, Trophy, Users, Target, Crown, BookOpen, Zap } from 'lucide-react';
import AnimatedCounter from './AnimatedCounter';

const TrainersSection = () => {
  const { t } = useLanguage();

  const trophyImages = [
    '/lovable-uploads/1e9ce55b-f7e1-4c12-803f-ae1ac6fb4b4e.png',
    '/lovable-uploads/83a3c8e8-0ec0-42f7-b82e-caf8ad92396b.png',
    '/lovable-uploads/2f660698-7297-4b74-837c-eab331bfaa90.png',
    '/lovable-uploads/0db739a4-0cba-4384-af27-ef673467514b.png',
    '/lovable-uploads/c21b98f0-16ab-439a-8d9b-d9839940bb3b.png',
    '/lovable-uploads/910efa9d-1959-4d06-b112-0b366e537098.png',
    '/lovable-uploads/2cb8d5d9-1dc9-4116-9e6d-d82dd80d1111.png',
    '/lovable-uploads/3cc7401c-ac5c-4d84-8d29-36fe24b678bd.png',
    '/lovable-uploads/d73a7086-9fd5-4b21-96a8-44449c7875d6.png'
  ];

  const trainers = [
    {
      name: '‚ôõ –£–º–±–µ—Ç–æ–≤ –ö–∞–∑—ã–±–µ–∫',
      title: '–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä, FIDE Master',
      description: '–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –∞–∫–∞–¥–µ–º–∏–∏ –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ –≥–ª—É–±–æ–∫–æ–π —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π. –° 7-–ª–µ—Ç–Ω–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –æ–ø—ã—Ç–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –∏ –±–æ–ª–µ–µ 40 –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ –∑–∞ –ø–ª–µ—á–∞–º–∏, –ö–∞–∑—ã–±–µ–∫ –≥–æ—Ç–æ–≤–∏—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —à–∞—Ö–º–∞—Ç–∏—Å—Ç–æ–≤ ‚Äî –∞ —á–µ–º–ø–∏–æ–Ω–æ–≤. –û–Ω –æ–±—É—á–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –∫–∞–∑–∞—Ö—Å–∫–æ–º —è–∑—ã–∫–∞—Ö, –∞–¥–∞–ø—Ç–∏—Ä—É—è —Å—Ç–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æ —É—á–µ–Ω–∏–∫–∞, –æ—Ç –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –¥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ –º–∞—Å—Ç–µ—Ä–∞ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∑–≤—ë–∑–¥.',
      image: '/lovable-uploads/27d4b69c-78a0-4def-8a3d-c76fb8a9e0bd.png',
      isMain: true,
      achievements: [
        'üèÜ FIDE Master –ø–æ —à–∞—Ö–º–∞—Ç–∞–º',
        'ü•á –ß–µ–º–ø–∏–æ–Ω –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ 2015 –≥–æ–¥–∞',
        'üåç –£—á–∞—Å—Ç–Ω–∏–∫ 40+ –∫—Ä—É–ø–Ω—ã—Ö –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤',
        '‚ôî –ò–≥—Ä–∞–ª –ø—Ä–æ—Ç–∏–≤ –Ω—ã–Ω–µ—à–Ω–µ–≥–æ —á–µ–º–ø–∏–æ–Ω–∞ –º–∏—Ä–∞ –ì—É–∫–µ—à–∞ (2018)',
        'üèÖ –í—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø-100 —à–∞—Ö–º–∞—Ç–∏—Å—Ç–æ–≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞',
        'üíª –û–Ω–ª–∞–π–Ω-—Ä–µ–π—Ç–∏–Ω–≥: 2700+ Lichess, 2600+ Chess.com',
        'üë®‚Äçüéì –ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª 450+ —É—á–µ–Ω–∏–∫–æ–≤, –≤–∫–ª—é—á–∞—è –ø—Ä–∏–∑—ë—Ä–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞—Ç–æ–≤ –º–∏—Ä–∞, –ê–∑–∏–∏ –∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞',
        'üìö –ê–≤—Ç–æ—Ä —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏'
      ],
      specialization: [
        'üéØ –¢—É—Ä–Ω–∏—Ä–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–¥ –∫–ª—é—á (–æ—Ç –¥–µ–±—é—Ç–æ–≤ –¥–æ —ç–Ω–¥—à–ø–∏–ª—è)',
        'üîç –ì–ª—É–±–æ–∫–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–µ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
        '‚ôü –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä—Ç–∏–π –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä–µ–ø–µ—Ä—Ç—É–∞—Ä–∞',
        '‚è≥ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∏–≥—Ä—ã –≤ —Ü–µ–π—Ç–Ω–æ—Ç–µ, –±—ã—Å—Ç—Ä–æ–π –æ—Ü–µ–Ω–∫–∏ –ø–æ–∑–∏—Ü–∏–π',
        'üß† –†–∞–∑–≤–∏—Ç–∏–µ –º—ã—à–ª–µ–Ω–∏—è —á–µ–º–ø–∏–æ–Ω–∞ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏'
      ],
      profiles: [
        {
          platform: 'Lichess',
          url: 'https://lichess.org/@/Terminator_10000',
          icon: '‚ôû'
        },
        {
          platform: 'Chess.com',
          url: 'https://www.chess.com/member/bale1290',
          icon: '‚ôü'
        }
      ],
      icon: Crown,
      accentColor: 'from-yellow-400/30 to-yellow-600/30 border-yellow-500/50 bg-gradient-to-br from-yellow-50/10 to-yellow-100/20'
    },
    {
      name: 'üß† –ê–º–∏—Ä –•–∞—Å–µ–Ω–æ–≤',
      title: '–°—Ç–∞—Ä—à–∏–π —Ç—Ä–µ–Ω–µ—Ä, –ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –º–∞—Å—Ç–µ—Ä–∞ —Å–ø–æ—Ä—Ç–∞ (–ö–ú–°)',
      description: '–¢—Ä–µ–Ω–µ—Ä —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —à–∞—Ö–º–∞—Ç–Ω—ã–º –∏ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º. –í—ã–ø—É—Å–∫–Ω–∏–∫ –±—Ä–∏—Ç–∞–Ω—Å–∫–∏—Ö —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π –∏ –ø—Ä–∏–∑—ë—Ä –º–Ω–æ–≥–∏—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤, –ê–º–∏—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ—á–µ—Ç–∞–µ—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫—É—é —à–∫–æ–ª—É –º—ã—à–ª–µ–Ω–∏—è —Å –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ —Ä–∞—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ä–µ–¥–µ.',
      image: '/lovable-uploads/7c292e74-5e52-490b-8a0d-7f74b2c38bca.png',
      isMain: false,
      achievements: [
        'üèÜ –£—á–µ–Ω–∏–∫–∏ ‚Äî —á–µ–º–ø–∏–æ–Ω—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –∏ –ø—Ä–∏–∑—ë—Ä—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤',
        'üéì Oxford International School (UK)',
        'üéì Aston University (UK)',
        'üåê –í–ª–∞–¥–µ–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–º, —Ä—É—Å—Å–∫–∏–º –∏ –∫–∞–∑–∞—Ö—Å–∫–∏–º —è–∑—ã–∫–∞–º–∏',
        'üìö –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ —É–ø–æ—Ä –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —á—É—Ç—å—è'
      ],
      specialization: [
        'üë• –ì—Ä—É–ø–ø–æ–≤—ã–µ –∏ –∫–æ–º–∞–Ω–¥–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è (–∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è 2‚Äì4 —á–µ–ª–æ–≤–µ–∫)',
        '‚ö° –ë–ª–∏—Ü, –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏, —Ç–∞–∫—Ç–∏–∫–∞',
        'üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –ö–ú–°, I‚ÄìIV —Ä–∞–∑—Ä—è–¥–æ–≤',
        'üí¨ –õ—ë–≥–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∏–¥–µ–π –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–º —è–∑—ã–∫–µ',
        'üõ° –†–∞–∑–≤–∏—Ç–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è'
      ],
      profiles: [
        {
          platform: 'Chess.com',
          url: 'https://www.chess.com/member/TTenthOcean',
          icon: '‚ôü'
        }
      ],
      icon: BookOpen,
      accentColor: 'from-blue-400/30 to-blue-600/30 border-blue-500/50 bg-gradient-to-br from-blue-50/10 to-blue-100/20'
    },
    {
      name: 'üß† –¢–∞–º–µ—Ä–ª–∞–Ω –•–∞—Å–µ–Ω–æ–≤',
      title: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä, –ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –º–∞—Å—Ç–µ—Ä–∞ —Å–ø–æ—Ä—Ç–∞',
      description: '–°–ø–æ–∫–æ–π–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É—á–µ–Ω–∏–∫–∞–º –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π —Å—Ç–∏–ª—å –∏–≥—Ä—ã –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—Ä–æ–≤–∞—Ç—å. –¢–∞–º–µ—Ä–ª–∞–Ω ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö, –º–ª–∞–¥—à–∏—Ö —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –∏ –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞—É—á–∏—Ç—å—Å—è –º—ã—Å–ª–∏—Ç—å –≥–ª—É–±–æ–∫–æ, –Ω–æ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞.',
      image: '/lovable-uploads/7c292e74-5e52-490b-8a0d-7f74b2c38bca.png',
      isMain: false,
      achievements: [
        'üèÜ –ü—Ä–∏–∑—ë—Ä –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –∏ —Ä–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–∏—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤',
        'üïπ 15+ –ª–µ—Ç –∏–≥—Ä–æ–≤–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –±–æ–ª–µ–µ 9 –ª–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è',
        'üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –¥–µ–±—é—Ç–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–µ –Ω–∞–¥ —Ç–∏–ø–∏—á–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏'
      ],
      specialization: [
        'üë¶ –ó–∞–Ω—è—Ç–∏—è —Å –¥–µ—Ç—å–º–∏ –∏ –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏',
        '‚è≥ –û–±—É—á–µ–Ω–∏–µ —Å –Ω—É–ª—è: –æ—Ç —Ñ–∏–≥—É—Ä –¥–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π',
        'üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '‚ôü –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ç–µ–º–ø + –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
        'üß© –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è'
      ],
      profiles: [
        {
          platform: 'Lichess',
          url: 'https://lichess.org/@/Tamerlan_269',
          icon: '‚ôû'
        }
      ],
      icon: Zap,
      accentColor: 'from-green-400/30 to-green-600/30 border-green-500/50 bg-gradient-to-br from-green-50/10 to-green-100/20'
    }
  ];

  return (
    <section className="py-16 bg-gradient-to-br from-background via-background/80 to-muted/30 relative">
      {/* Background Pattern */}
      <div className="absolute inset-0 bg-grid-white/[0.02] bg-grid-16" />
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-yellow-500/10 to-yellow-600/10 border border-yellow-500/20 rounded-full text-yellow-600 text-sm font-medium backdrop-blur-sm mb-6">
            <Trophy className="w-4 h-4 mr-2" />
            –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞
          </div>
          <div className="fancy-border inline-block p-6 bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-sm rounded-3xl border-2 border-white/20 shadow-xl">
            <h1 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
              {t('trainers.title')}
            </h1>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              {t('trainers.subtitle')}
            </p>
          </div>
        </div>

        {/* Team Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-6 mb-16">
          <div className="text-center p-4 md:p-6 bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-2xl border border-white/10 fancy-border">
            <div className="text-2xl md:text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={500} suffix="+" />
            </div>
            <p className="text-xs md:text-sm text-muted-foreground">{t('trainers.stats.students')}</p>
          </div>
          <div className="text-center p-4 md:p-6 bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-2xl border border-white/10 fancy-border">
            <div className="text-2xl md:text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={16} suffix="+" />
            </div>
            <p className="text-xs md:text-sm text-muted-foreground">{t('trainers.stats.experience')}</p>
          </div>
          <div className="text-center p-4 md:p-6 bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-2xl border border-white/10 fancy-border">
            <div className="text-2xl md:text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={350} suffix="+" />
            </div>
            <p className="text-xs md:text-sm text-muted-foreground">{t('trainers.stats.tournaments')}</p>
          </div>
          <div className="text-center p-4 md:p-6 bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-2xl border border-white/10 fancy-border">
            <div className="text-2xl md:text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={5} />
            </div>
            <p className="text-xs md:text-sm text-muted-foreground">{t('trainers.stats.rating')}</p>
          </div>
        </div>

        {/* Trainers Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 md:gap-8 mb-16">
          {trainers.map((trainer, index) => (
            <Card 
              key={index} 
              className={`group relative border-2 hover:shadow-2xl hover:-translate-y-3 transition-all duration-300 cursor-pointer ${trainer.accentColor} backdrop-blur-sm overflow-hidden fancy-border`}
            >
              {/* Main trainer badge */}
              {trainer.isMain && (
                <div className="absolute top-4 right-4 z-20">
                  <Badge className="bg-yellow-500 text-black font-bold animate-pulse text-xs">
                    üëë {t('trainers.mainTrainer')}
                  </Badge>
                </div>
              )}

              {/* Decorative background pattern */}
              <div className="absolute top-0 right-0 w-24 md:w-32 h-24 md:h-32 opacity-10">
                <trainer.icon className="w-full h-full" />
              </div>
              
              <CardHeader className="text-center pb-4 relative z-10">
                <div className={`w-16 md:w-20 h-16 md:h-20 mx-auto mb-4 rounded-full overflow-hidden flex items-center justify-center border-4 shadow-lg ${trainer.isMain ? 'bg-gradient-to-br from-yellow-400 to-yellow-600 border-yellow-300' : trainer.name.includes('–ê–º–∏—Ä') ? 'bg-gradient-to-br from-blue-400 to-blue-600 border-blue-300' : 'bg-gradient-to-br from-green-400 to-green-600 border-green-300'}`}>
                  <trainer.icon className={`w-8 md:w-10 h-8 md:h-10 ${trainer.isMain ? 'text-black' : 'text-white'}`} />
                </div>
                <CardTitle className="text-lg md:text-xl font-bold">{trainer.name}</CardTitle>
                <CardDescription className={`text-xs md:text-sm font-medium px-3 py-1 rounded-full inline-block ${trainer.isMain ? 'text-yellow-600 bg-yellow-100/80' : trainer.name.includes('–ê–º–∏—Ä') ? 'text-blue-600 bg-blue-100/80' : 'text-green-600 bg-green-100/80'}`}>
                  {trainer.title}
                </CardDescription>
                <p className="text-xs md:text-sm text-muted-foreground mt-3 leading-relaxed">
                  {trainer.description}
                </p>
              </CardHeader>
              
              <CardContent className="space-y-4 md:space-y-6 relative z-10">
                {/* Achievements */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center text-sm md:text-base">
                    üèÖ <span className="ml-2">{t('trainers.achievements')}</span>
                  </h4>
                  <div className="space-y-2">
                    {trainer.achievements.map((achievement, achievementIndex) => (
                      <div key={achievementIndex} className="flex items-start text-xs md:text-sm">
                        <div className={`w-2 h-2 rounded-full mr-3 mt-2 flex-shrink-0 ${trainer.isMain ? 'bg-yellow-500' : trainer.name.includes('–ê–º–∏—Ä') ? 'bg-blue-500' : 'bg-green-500'}`} />
                        <span className="text-muted-foreground leading-relaxed">{achievement}</span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Specialization */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center text-sm md:text-base">
                    üß† <span className="ml-2">{t('trainers.specialization')}</span>
                  </h4>
                  <div className="grid grid-cols-1 gap-2">
                    {trainer.specialization.map((spec, specIndex) => (
                      <Badge
                        key={specIndex}
                        variant="outline"
                        className="justify-start text-xs py-2 bg-background/50"
                      >
                        ‚úì {spec}
                      </Badge>
                    ))}
                  </div>
                </div>

                {/* Chess Platform Profiles */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center text-sm md:text-base">
                    üåê <span className="ml-2">{t('trainers.platforms')}</span>
                  </h4>
                  <div className="space-y-2">
                    {trainer.profiles.map((profile, profileIndex) => (
                      <Button
                        key={profileIndex}
                        variant="outline"
                        size="sm"
                        className="w-full justify-between hover:bg-primary/10 hover:border-primary transition-all duration-200 bg-background/50 text-xs md:text-sm"
                        onClick={() => window.open(profile.url, '_blank')}
                      >
                        <div className="flex items-center">
                          <span className="mr-2 text-base md:text-lg">{profile.icon}</span>
                          {profile.platform}
                        </div>
                        <ExternalLink className="w-3 md:w-4 h-3 md:h-4" />
                      </Button>
                    ))}
                  </div>
                </div>

                {/* Contact Button */}
                <div className="pt-4 border-t border-border/50">
                  <Button
                    className={`w-full font-bold py-3 text-sm md:text-base shadow-lg hover:shadow-xl transition-all duration-200 hover:scale-105 ${
                      trainer.isMain 
                        ? 'bg-yellow-500 hover:bg-yellow-600 text-black' 
                        : trainer.name.includes('–ê–º–∏—Ä')
                        ? 'bg-blue-500 hover:bg-blue-600 text-white'
                        : 'bg-green-500 hover:bg-green-600 text-white'
                    }`}
                    onClick={() => window.open('https://t.me/ChessBeast_1', '_blank')}
                  >
                    üîó {t('trainers.bookLesson')}
                  </Button>
                </div>
              </CardContent>

              {/* Enhanced hover overlay effect */}
              <div className={`absolute inset-0 bg-gradient-to-t opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none ${trainer.isMain ? 'from-yellow-500/5 to-transparent' : trainer.name.includes('–ê–º–∏—Ä') ? 'from-blue-500/5 to-transparent' : 'from-green-500/5 to-transparent'}`} />
            </Card>
          ))}
        </div>

        {/* Achievement Gallery Section - MOVED HERE AFTER TRAINER CARDS */}
        <div className="mb-16">
          <div className="text-center mb-8">
            <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-yellow-500/10 to-yellow-600/10 border border-yellow-500/20 rounded-full text-yellow-600 text-sm font-medium backdrop-blur-sm mb-4">
              <Trophy className="w-4 h-4 mr-2" />
              –ì–∞–ª–µ—Ä–µ—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
            </div>
            <div className="fancy-border inline-block p-6 bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-sm rounded-3xl border-2 border-white/20 shadow-xl">
              <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-2">
                –ö—É–±–∫–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã –ö–∞–∑—ã–±–µ–∫–∞
              </h2>
              <p className="text-muted-foreground">
                –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–∞–≥—Ä–∞–¥ –∏ —Ç—Ä–æ—Ñ–µ–µ–≤, –∑–∞–≤–æ—ë–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–∞—Ö
              </p>
            </div>
          </div>
          
          <div className="fancy-border p-6 bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-3xl border-2 border-white/20 shadow-xl">
            <div className="grid grid-cols-3 md:grid-cols-5 lg:grid-cols-6 gap-4">
              {trophyImages.map((trophy, index) => (
                <div 
                  key={index}
                  className="group relative bg-white/10 backdrop-blur-sm rounded-xl p-3 border border-white/20 hover:border-yellow-500/40 transition-all duration-300 shadow-lg hover:shadow-xl"
                >
                  <div className="aspect-square overflow-hidden rounded-lg">
                    <img 
                      src={trophy} 
                      alt={`Trophy ${index + 1}`}
                      className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                      style={{ pointerEvents: 'none', userSelect: 'none' }}
                    />
                  </div>
                  <div className="absolute inset-0 bg-gradient-to-t from-yellow-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl pointer-events-none" />
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Telegram Bot Section */}
        <div className="mb-8 text-center">
          <div className="bg-gradient-to-br from-white/5 to-white/0 backdrop-blur-sm rounded-2xl border border-white/10 p-6 md:p-8 fancy-border">
            <h3 className="text-xl md:text-2xl font-bold mb-4">{t('trainers.botTitle')}</h3>
            <p className="text-muted-foreground mb-6 text-sm md:text-base">{t('trainers.botDescription')}</p>
            <Button
              size="lg"
              className="bg-blue-500 hover:bg-blue-600 text-white font-semibold"
              onClick={() => window.open('https://t.me/Kazybek_Umbetov_Chess_Bot', '_blank')}
            >
              ü§ñ {t('trainers.botButton')}
            </Button>
          </div>
        </div>

        {/* Telegram Channel Section */}
        <div className="text-center">
          <div className="bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-2xl border border-blue-200/50 p-4 md:p-6 fancy-border">
            <h3 className="text-lg md:text-xl font-bold mb-2">
              üì¢ {t('nav.language') === 'ru' ? '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª!' : 'Subscribe to our Telegram channel!'}
            </h3>
            <p className="text-muted-foreground mb-4 text-sm md:text-base">
              {t('nav.language') === 'ru' 
                ? '–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π' 
                : 'Stay updated with news and updates'
              }
            </p>
            <Button
              variant="outline"
              className="border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white"
              onClick={() => window.open('https://t.me/kazybek_chess', '_blank')}
            >
              üì± {t('nav.language') === 'ru' ? '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è' : 'Subscribe'}
            </Button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TrainersSection;
