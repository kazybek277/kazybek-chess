
import React from 'react';
import { useLanguage } from '@/contexts/LanguageContext';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ExternalLink, Trophy, Users, Target, Crown } from 'lucide-react';
import AnimatedCounter from './AnimatedCounter';

const TrainersSection = () => {
  const { t } = useLanguage();

  const trainers = [
    {
      name: '‚ôõ –£–º–±–µ—Ç–æ–≤ –ö–∞–∑—ã–±–µ–∫',
      title: '–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä, FIDE Master',
      description: '–ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –∞–∫–∞–¥–µ–º–∏–∏ –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ –≥–ª—É–±–æ–∫–æ–π —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π. –° 7-–ª–µ—Ç–Ω–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –æ–ø—ã—Ç–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –∏ –±–æ–ª–µ–µ 40 –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ –∑–∞ –ø–ª–µ—á–∞–º–∏, –ö–∞–∑—ã–±–µ–∫ –≥–æ—Ç–æ–≤–∏—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —à–∞—Ö–º–∞—Ç–∏—Å—Ç–æ–≤ ‚Äî –∞ —á–µ–º–ø–∏–æ–Ω–æ–≤. –û–Ω –æ–±—É—á–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –∫–∞–∑–∞—Ö—Å–∫–æ–º —è–∑—ã–∫–∞—Ö, –∞–¥–∞–ø—Ç–∏—Ä—É—è —Å—Ç–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æ —É—á–µ–Ω–∏–∫–∞, –æ—Ç –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –¥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ –º–∞—Å—Ç–µ—Ä–∞ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∑–≤—ë–∑–¥.',
      image: '/lovable-uploads/27d4b69c-78a0-4def-8a3d-c76fb8a9e0bd.png',
      isMain: true,
      achievements: [
        'üèÜ FIDE Master –ø–æ —à–∞—Ö–º–∞—Ç–∞–º',
        'ü•á –ß–µ–º–ø–∏–æ–Ω –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ 2015 –≥–æ–¥–∞',
        'üåç –£—á–∞—Å—Ç–Ω–∏–∫ 40+ –∫—Ä—É–ø–Ω—ã—Ö –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤',
        '‚ôî –ò–≥—Ä–∞–ª –ø—Ä–æ—Ç–∏–≤ –Ω—ã–Ω–µ—à–Ω–µ–≥–æ —á–µ–º–ø–∏–æ–Ω–∞ –º–∏—Ä–∞ –ì—É–∫–µ—à–∞ (2018)',
        'üèÖ –í—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø-100 —à–∞—Ö–º–∞—Ç–∏—Å—Ç–æ–≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞',
        'üíª –û–Ω–ª–∞–π–Ω-—Ä–µ–π—Ç–∏–Ω–≥: 2700+ Lichess, 2600+ Chess.com',
        'üë®‚Äçüéì –ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª 450+ —É—á–µ–Ω–∏–∫–æ–≤, –≤–∫–ª—é—á–∞—è –ø—Ä–∏–∑—ë—Ä–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞—Ç–æ–≤ –º–∏—Ä–∞, –ê–∑–∏–∏ –∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞',
        'üìö –ê–≤—Ç–æ—Ä —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏'
      ],
      specialization: [
        'üéØ –¢—É—Ä–Ω–∏—Ä–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–¥ –∫–ª—é—á (–æ—Ç –¥–µ–±—é—Ç–æ–≤ –¥–æ —ç–Ω–¥—à–ø–∏–ª—è)',
        'üîç –ì–ª—É–±–æ–∫–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–µ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
        '‚ôü –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä—Ç–∏–π –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä–µ–ø–µ—Ä—Ç—É–∞—Ä–∞',
        '‚è≥ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∏–≥—Ä—ã –≤ —Ü–µ–π—Ç–Ω–æ—Ç–µ, –±—ã—Å—Ç—Ä–æ–π –æ—Ü–µ–Ω–∫–∏ –ø–æ–∑–∏—Ü–∏–π',
        'üß† –†–∞–∑–≤–∏—Ç–∏–µ –º—ã—à–ª–µ–Ω–∏—è —á–µ–º–ø–∏–æ–Ω–∞ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏'
      ],
      profiles: [
        {
          platform: 'Lichess',
          url: 'https://lichess.org/@/Terminator_10000',
          icon: '‚ôû'
        },
        {
          platform: 'Chess.com',
          url: 'https://www.chess.com/member/bale1290',
          icon: '‚ôü'
        }
      ],
      icon: Crown,
      accentColor: 'from-yellow-400/30 to-yellow-600/30 border-yellow-500/50 bg-gradient-to-br from-yellow-50/10 to-yellow-100/20'
    },
    {
      name: t('trainers.amir.name'),
      title: t('trainers.amir.title'),
      description: t('trainers.amir.description'),
      image: '/lovable-uploads/7c292e74-5e52-490b-8a0d-7f74b2c38bca.png',
      isMain: false,
      achievements: [
        'üèÜ –£—á–µ–Ω–∏–∫–∏ –ê–º–∏—Ä–∞ ‚Äî –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–µ —á–µ–º–ø–∏–æ–Ω—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –∏ –ø—Ä–∏–∑—ë—Ä—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤.',
        'üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –æ–∫–æ–Ω—á–∏–ª Oxford International School –∏ Aston University, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è.',
        'üåç –°–≤–æ–±–æ–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, —Ä—É—Å—Å–∫–æ–º –∏ –∫–∞–∑–∞—Ö—Å–∫–æ–º.',
        'üîç –í –æ–±—É—á–µ–Ω–∏–∏ –¥–µ–ª–∞–µ—Ç —É–ø–æ—Ä –Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω —É—á–µ–Ω–∏–∫–∞.'
      ],
      specialization: [
        t('trainers.amir.specialization.group'),
        t('trainers.amir.specialization.tactics'),
        t('trainers.amir.specialization.preparation'),
        t('trainers.amir.specialization.confidence')
      ],
      profiles: [
        {
          platform: 'Chess.com',
          url: 'https://www.chess.com/member/TTenthOcean',
          icon: '‚ôü'
        }
      ],
      icon: Users,
      accentColor: 'from-gray-300/30 to-gray-500/30 border-gray-400/50 bg-gradient-to-br from-gray-50/10 to-gray-100/20'
    },
    {
      name: t('trainers.tamerlan.name'),
      title: t('trainers.tamerlan.title'),
      description: t('trainers.tamerlan.description'),
      image: '/lovable-uploads/7c292e74-5e52-490b-8a0d-7f74b2c38bca.png',
      isMain: false,
      achievements: [
        t('trainers.tamerlan.achievements.kms'),
        t('trainers.tamerlan.achievements.prizewinner'),
        t('trainers.tamerlan.achievements.city'),
        t('trainers.tamerlan.achievements.experience'),
        t('trainers.tamerlan.achievements.teaching'),
        t('trainers.tamerlan.achievements.students')
      ],
      specialization: [
        t('trainers.tamerlan.specialization.children'),
        t('trainers.tamerlan.specialization.positional'),
        t('trainers.tamerlan.specialization.pair'),
        t('trainers.tamerlan.specialization.analysis')
      ],
      profiles: [
        {
          platform: 'Lichess',
          url: 'https://lichess.org/@/Tamerlan_269',
          icon: '‚ôû'
        }
      ],
      icon: Target,
      accentColor: 'from-gray-300/30 to-gray-500/30 border-gray-400/50 bg-gradient-to-br from-gray-50/10 to-gray-100/20'
    }
  ];

  return (
    <section className="py-16 bg-background">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
            {t('trainers.title')}
          </h1>
          <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
            {t('trainers.subtitle')}
          </p>
        </div>

        {/* Team Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-16">
          <div className="text-center p-6 bg-muted/30 rounded-lg">
            <div className="text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={500} suffix="+" />
            </div>
            <p className="text-sm text-muted-foreground">{t('trainers.stats.students')}</p>
          </div>
          <div className="text-center p-6 bg-muted/30 rounded-lg">
            <div className="text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={16} suffix="+" />
            </div>
            <p className="text-sm text-muted-foreground">{t('trainers.stats.experience')}</p>
          </div>
          <div className="text-center p-6 bg-muted/30 rounded-lg">
            <div className="text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={350} suffix="+" />
            </div>
            <p className="text-sm text-muted-foreground">{t('trainers.stats.tournaments')}</p>
          </div>
          <div className="text-center p-6 bg-muted/30 rounded-lg">
            <div className="text-3xl font-bold text-yellow-500 mb-2">
              <AnimatedCounter end={5} />
            </div>
            <p className="text-sm text-muted-foreground">{t('trainers.stats.rating')}</p>
          </div>
        </div>

        {/* Trainers Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {trainers.map((trainer, index) => (
            <Card 
              key={index} 
              className={`group relative border-2 hover:shadow-2xl hover:-translate-y-3 transition-all duration-300 cursor-pointer ${trainer.accentColor} backdrop-blur-sm overflow-hidden`}
            >
              {/* Main trainer badge */}
              {trainer.isMain && (
                <div className="absolute top-4 right-4 z-20">
                  <Badge className="bg-yellow-500 text-black font-bold animate-pulse">
                    üëë {t('trainers.mainTrainer')}
                  </Badge>
                </div>
              )}

              {/* Decorative background pattern */}
              <div className="absolute top-0 right-0 w-32 h-32 opacity-10">
                <trainer.icon className="w-full h-full" />
              </div>
              
              <CardHeader className="text-center pb-4 relative z-10">
                <div className={`w-20 h-20 mx-auto mb-4 rounded-full overflow-hidden flex items-center justify-center border-4 shadow-lg ${trainer.isMain ? 'bg-gradient-to-br from-yellow-400 to-yellow-600 border-yellow-300' : 'bg-gradient-to-br from-muted/50 to-muted/80 border-white/20'}`}>
                  <trainer.icon className={`w-10 h-10 ${trainer.isMain ? 'text-black' : 'text-gray-500'}`} />
                </div>
                <CardTitle className="text-xl font-bold">{trainer.name}</CardTitle>
                <CardDescription className={`text-sm font-medium px-3 py-1 rounded-full inline-block ${trainer.isMain ? 'text-yellow-600 bg-yellow-100/80' : 'text-primary bg-background/80'}`}>
                  {trainer.title}
                </CardDescription>
                <p className="text-sm text-muted-foreground mt-3 leading-relaxed">
                  {trainer.description}
                </p>
              </CardHeader>
              
              <CardContent className="space-y-6 relative z-10">
                {/* Achievements */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center">
                    üèÖ <span className="ml-2">{t('trainers.achievements')}</span>
                  </h4>
                  <div className="space-y-2">
                    {trainer.achievements.map((achievement, achievementIndex) => (
                      <div key={achievementIndex} className="flex items-start text-sm">
                        <div className={`w-2 h-2 rounded-full mr-3 mt-2 flex-shrink-0 ${trainer.isMain ? 'bg-yellow-500' : 'bg-gray-500'}`} />
                        <span className="text-muted-foreground leading-relaxed">{achievement}</span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Specialization */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center">
                    üß† <span className="ml-2">{t('trainers.specialization')}</span>
                  </h4>
                  <div className="grid grid-cols-1 gap-2">
                    {trainer.specialization.map((spec, specIndex) => (
                      <Badge
                        key={specIndex}
                        variant="outline"
                        className="justify-start text-xs py-2 bg-background/50"
                      >
                        ‚úì {spec}
                      </Badge>
                    ))}
                  </div>
                </div>

                {/* Chess Platform Profiles */}
                <div>
                  <h4 className="font-bold mb-3 text-foreground flex items-center">
                    üåê <span className="ml-2">{t('trainers.platforms')}</span>
                  </h4>
                  <div className="space-y-2">
                    {trainer.profiles.map((profile, profileIndex) => (
                      <Button
                        key={profileIndex}
                        variant="outline"
                        size="sm"
                        className="w-full justify-between hover:bg-primary/10 hover:border-primary transition-all duration-200 bg-background/50"
                        onClick={() => window.open(profile.url, '_blank')}
                      >
                        <div className="flex items-center">
                          <span className="mr-2 text-lg">{profile.icon}</span>
                          {profile.platform}
                        </div>
                        <ExternalLink className="w-4 h-4" />
                      </Button>
                    ))}
                  </div>
                </div>

                {/* Contact Button with enhanced visibility */}
                <div className="pt-4 border-t border-border/50">
                  <Button
                    className={`w-full font-bold py-3 text-base shadow-lg hover:shadow-xl transition-all duration-200 hover:scale-105 ${
                      trainer.isMain 
                        ? 'bg-yellow-500 hover:bg-yellow-600 text-black' 
                        : 'bg-gray-500 hover:bg-gray-600 text-white'
                    }`}
                    onClick={() => window.open('https://t.me/ChessBeast_1', '_blank')}
                  >
                    üîó {t('trainers.bookLesson')}
                  </Button>
                </div>
              </CardContent>

              {/* Enhanced hover overlay effect */}
              <div className={`absolute inset-0 bg-gradient-to-t opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none ${trainer.isMain ? 'from-yellow-500/5 to-transparent' : 'from-background/5 to-transparent'}`} />
            </Card>
          ))}
        </div>

        {/* Telegram Bot Section */}
        <div className="mt-16 text-center">
          <div className="bg-muted/30 rounded-lg p-8">
            <h3 className="text-2xl font-bold mb-4">{t('trainers.botTitle')}</h3>
            <p className="text-muted-foreground mb-6">{t('trainers.botDescription')}</p>
            <Button
              size="lg"
              className="bg-blue-500 hover:bg-blue-600 text-white font-semibold"
              onClick={() => window.open('https://t.me/Kazybek_Umbetov_Chess_Bot', '_blank')}
            >
              ü§ñ {t('trainers.botButton')}
            </Button>
          </div>
        </div>

        {/* Telegram Channel Section */}
        <div className="mt-8 text-center">
          <div className="bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg p-6">
            <h3 className="text-xl font-bold mb-2">
              üì¢ {t('nav.language') === 'ru' ? '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª!' : 'Subscribe to our Telegram channel!'}
            </h3>
            <p className="text-muted-foreground mb-4">
              {t('nav.language') === 'ru' 
                ? '–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π' 
                : 'Stay updated with news and updates'
              }
            </p>
            <Button
              variant="outline"
              className="border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white"
              onClick={() => window.open('https://t.me/kazybek_chess', '_blank')}
            >
              üì± {t('nav.language') === 'ru' ? '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è' : 'Subscribe'}
            </Button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TrainersSection;
